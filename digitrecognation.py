# -*- coding: utf-8 -*-
"""digitrecognation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v8AM48CE4wVj7OmW1PVrlo-jw91H9U7J
"""

import pandas as pd
import numpy as np
import seaborn as sbn
import matplotlib.pyplot as plt
import tensorflow as tf
from sklearn.model_selection import train_test_split
import keras
import joblib

train=pd.read_csv("/content/train.csv")
test=pd.read_csv("/content/test.csv")

train.head()

test.head()

y_train=train["label"]
x_train=train.drop(labels=["label"],axis=1)

y_train

x_train

y_train=y_train/255
test=test/255

x_train=x_train.values.reshape(-1,28,28,1)
test=test.values.reshape(-1,28,28,1)

x_train,x_test,y_train,y_test=train_test_split(x_train,y_train,test_size=0.1,random_state=2)

y_train=keras.utils.to_categorical(y_train)
y_test=keras.utils.to_categorical(y_test)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense,Dropout,Activation,Flatten
from tensorflow.keras import datasets,layers,models

model=models.Sequential([
    layers.Conv2D(filters=32,kernel_size=(3,3),activation="relu",input_shape=(28,28,1)),
    layers.MaxPooling2D(2,2),
    layers.Conv2D(filters=64,kernel_size=(3,3),activation="relu"),
    layers.MaxPooling2D(2,2),
    layers.Flatten(),
    layers.Dropout(0.25),
    layers.Dense(10,activation="softmax")
])
model.compile(optimizer="adam",loss="sparse_categorical_crossentropy",metrics=["accuracy"])

model.summary()

model.fit(x_train,y_train,epochs=10,validation_split=0.3)

eveluate=model.evaluate(x_test,y_test)

print(f"model accuracy: {eveluate[1]}")

joblib.dump(model,"model.h5")